{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\Documents\\\\makor\\\\client\\\\src\\\\components\\\\showData.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport { getData } from \"../services/dataService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ShowData() {\n  _s();\n\n  const [bids, setBids] = useState(\"\");\n  const [asks, setAsks] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await getData();\n        console.log(res);\n        setBids(res[\"bids\"]);\n        setAsks(res[\"asks\"]);\n        debugger;\n        console.log(bids);\n        console.log(asks);\n      } catch (e) {\n        setBids([]);\n      }\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: bids.map(bid => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: bid[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: bid[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: asks[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ShowData, \"57IPO/IU+ss/7uwvYGgOaS3ObXU=\");\n\n_c = ShowData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowData\");","map":{"version":3,"sources":["C:/Users/user1/Documents/makor/client/src/components/showData.js"],"names":["React","useState","useEffect","getData","ShowData","bids","setBids","asks","setAsks","fetchData","res","console","log","e","map","bid"],"mappings":";;;AAAA,SAAQA,KAAR,EAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,OAAT,QAAwB,yBAAxB;;;AACA,eAAe,SAASC,QAAT,GACf;AAAA;;AACI,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeL,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACM,IAAD,EAAMC,OAAN,IAAeP,QAAQ,CAAC,EAAD,CAA7B;AACAC,EAAAA,SAAS,CAAC,MAAI;AACV,mBAAeO,SAAf,GACA;AAAC,UACG;AACI,cAAMC,GAAG,GAAE,MAAMP,OAAO,EAAxB;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAJ,QAAAA,OAAO,CAACI,GAAG,CAAC,MAAD,CAAJ,CAAP;AACAF,QAAAA,OAAO,CAACE,GAAG,CAAC,MAAD,CAAJ,CAAP;AACA;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACH,OATJ,CAUG,OAAMM,CAAN,EACA;AACIP,QAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AAGJ;;AACJG,IAAAA,SAAS;AACT,GApBQ,EAoBP,EApBO,CAAT;AAqBA,sBACI;AAAA,4BACH;AAAA,gBACGJ,IAAI,CAACS,GAAL,CAASC,GAAG,iBACV;AAAA,gCACE;AAAA,oBAAKA,GAAG,CAAC,CAAD;AAAR;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKA,GAAG,CAAC,CAAD;AAAR;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AADH;AAAA;AAAA;AAAA;AAAA,YADG,eASH;AAAA,gBACCR,IAAI,CAAC,CAAD;AADL;AAAA;AAAA;AAAA;AAAA,YATG;AAAA,kBADJ;AAeH;;GAxCuBH,Q;;KAAAA,Q","sourcesContent":["import {React,useState,useEffect} from \"react\";\r\nimport { getData } from \"../services/dataService\";\r\nexport default function ShowData()\r\n{\r\n    const [bids,setBids]=useState(\"\");\r\n    const [asks,setAsks]=useState(\"\");\r\n    useEffect(()=>{\r\n        async function fetchData()\r\n        {try\r\n            {\r\n                const res =await getData();\r\n                console.log(res)\r\n                setBids(res[\"bids\"]);\r\n                setAsks(res[\"asks\"]);\r\n                debugger;\r\n                console.log(bids);\r\n                console.log(asks);\r\n            }\r\n            catch(e)\r\n            {\r\n                setBids([]);\r\n            }\r\n            \r\n\r\n        }     \r\n     fetchData();\r\n    },[])\r\n    return(\r\n        <>\r\n     <div>\r\n       {bids.map(bid=>\r\n          <tr>\r\n            <td>{bid[0]}</td>\r\n            <td>{bid[1]}</td>\r\n    </tr>\r\n           )}\r\n     </div>\r\n     <div>\r\n     {asks[0]}\r\n     </div>\r\n     </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}